<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Git | Nícolas Lazarte Kaqui]]></title>
  <link href="http://nicolaslazartekaqui.github.io/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://nicolaslazartekaqui.github.io/"/>
  <updated>2014-04-01T22:21:06-03:00</updated>
  <id>http://nicolaslazartekaqui.github.io/</id>
  <author>
    <name><![CDATA[Nícolas Lazarte Kaqui]]></name>
    <email><![CDATA[nicolaslazartekaqui@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Github - Fork a Repo]]></title>
    <link href="http://nicolaslazartekaqui.github.io/blog/2013/02/26/github-fork-a-repo/"/>
    <updated>2013-02-26T10:17:00-03:00</updated>
    <id>http://nicolaslazartekaqui.github.io/blog/2013/02/26/github-fork-a-repo</id>
    <content type="html"><![CDATA[<p>Quick tip: <a href="https://help.github.com/articles/fork-a-repo">https://help.github.com/articles/fork-a-repo</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git - Stash Your Modifications]]></title>
    <link href="http://nicolaslazartekaqui.github.io/blog/2013/02/25/git-stash-your-modifications/"/>
    <updated>2013-02-25T16:38:00-03:00</updated>
    <id>http://nicolaslazartekaqui.github.io/blog/2013/02/25/git-stash-your-modifications</id>
    <content type="html"><![CDATA[<p>During the development of a project in Git, it may be necessary to modify the branch without losing changes already made in another branch.</p>

<p>Git allows you to save the changes made and work on them later using the <code>git-stash</code>.</p>

<h3>Usage</h3>

<pre><code>$ git status
# On branch master
# Changes not staged for commit:
#   (use "git add &lt;file&gt;..." to update what will be committed)
#   (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)
#
# modified:   README.rdoc
</code></pre>

<p>in this case <code>README.rdoc</code> has changes, we save them using <code>git-stash</code></p>

<pre><code>$ git stash
# Saved working directory and index state WIP on master: 4a9db3e first
# HEAD is now at 4a9db3e first
</code></pre>

<p>changes saved, the project is now in version without changes</p>

<pre><code>$ git status
# On branch master
# nothing to commit (working directory clean)
</code></pre>

<p>to see which stashes you’ve stored, you can use <code>git stash list</code></p>

<pre><code>$ git stash list
# stash@{0}: WIP on master: 4a9db3e firs
</code></pre>

<p>You can reapply the stash using the command <code>git stash apply</code>. If you have more than one stash, you can specify which stash you want to apply, see the example:</p>

<pre><code>$ git stash apply stash@{0}
# On branch master
# Changes not staged for commit:
#   (use "git add &lt;file&gt;..." to update what will be committed)
#   (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)
#
# modified:   README.rdoc
</code></pre>

<p>To drop the stash use the command <code>git stash drop &lt;NAME_STASH&gt;</code> or when reapply the stash you can use the command <code>git stash pop &lt;NAME_STASH&gt;</code>, this way you reapply and drop the stash at the same time.</p>

<p>Is possible to do more things with this git tool, see more in this <a href="http://git-scm.com/book/en/Git-Tools-Stashing#Creating-a-Branch-from-a-Stash">link</a>.</p>
]]></content>
  </entry>
  
</feed>
